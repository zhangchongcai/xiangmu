<template>
    <div :class="['seat-container', isReverse ? 'reverse-style' : '']">
      <!-- 整个屏幕分为左右两个部分 左边：电影票  右边： 座位选择 -->
      <div v-show="leftStatus" class="left" :style="{display: leftStatus}">
        <router-view></router-view>
      </div>

      <div class="right">
        <div :class="['header', isExtends ? 'extendFontHeader' : '']">
          我是电影座位区头部内容
          <!-- 放大按钮 -->
          <i v-if="!isExtends" class="iconfont icon-neiye-quanping extend-btn" @click="extendSeats"></i>
        </div>
        <div class="screen" :style="{width: isExtends ? '580px' : '500px'}">
          银幕
        </div>

        <!-- 座位渲染开始begin -->
        <div class="seats" id="box" :style="{width: isExtends ? '720px' : '640px'}" @mousedown="drawRect">
          <div class="row-default" :style="{height: rows * extendNum + 'px', marginTop: -(maxHeight) + 'px'}">
            <span class="row-num-style" :style="{top: ((rowYs[index]) - firstYcoord) * 1.27 * extendNum + 12 + 'px'}" v-for="(item, index) in rowYs" :key="'row' + index">
              {{index + 1}}
            </span>
          </div>
          <div class="seats-center">
             <div ref="largeBox" :style="{width: cols * extendNum + 'px', height: rows * extendNum + 'px', top: -(maxHeight) + 'px', left: -(maxWidth) + 'px'}" class="seats-container">
               <div :style="{width: basicUnit * 1.27 * extendNum + 'px', height: basicUnit * 1.27 * extendNum + 'px', top: (item.y - firstYcoord) * 1.27 * extendNum + 'px', left: (item.x - firstXcoord) * 1.27 * extendNum + 'px', justifyContent: item.type == 3 ? 'flex-end' : item.type == 6 ? 'flex-start' : item.type == 4 ? '' : 'center'}" class="seat-default" v-for="(item, index) in seat_data" :key="'seat' + index" @click="selSingleSeat(item.is_sel, item.group_number)">
                  <i :class="['iconfont', item.type == 3 ? 'icon-sanrenzuozuo' : item.type == 6 ? 'icon-sanrenzuoyou' :   item.type == 4 ? 'icon-sanrenzuozhong' : 'icon-Single-seat', 'seat-default-style', item.is_sel ? 'seat-default-style-active' : '']" :style="{fontSize: isExtends ? '32px' : '28px'}"></i>
                  <span :class="['seat-num-default', item.is_sel ? 'active-seat-num' : '']" :style="{fontSize: isExtends ? '16px' : '12px'}">{{item.col}}</span>
                </div>
             </div>
          </div>
          <div class="row-default" :style="{height: rows * extendNum + 'px', marginTop: -(maxHeight) + 'px'}">
            <span class="row-num-style" :style="{top: ((rowYs[index]) - firstYcoord) * 1.27 * extendNum + 12 + 'px'}" v-for="(item, index) in rowYs" :key="'row' + index">
              {{index + 1}}
            </span>
          </div>
        </div>
        <!-- 坐座渲染结束end -->

         <!-- 底部座位说明begin  -->
        <div class="footer">
         <div class="seat-intro">
           <span class="intor-margin">
             <i :class="['iconfont', 'intor-img', 'icon-Single-seat', isExtends ? 'intor-img-large' : '']"></i>
             <span :class="['intor-font', isExtends ? 'intor-font-large' : '']">普通座椅</span>
           </span>
           <span class="intor-margin">
             <i :class="['iconfont', 'intor-img', 'icon-Massagechair-seat', isExtends ? 'intor-img-large' : '']"></i>
             <span :class="['intor-font', isExtends ? 'intor-font-large' : '']">按摩座椅</span>
           </span>
           <span class="intor-margin">
             <i :class="['iconfont', 'intor-img', 'icon-Handicapped-seat', isExtends ? 'intor-img-large' : '']"></i>
             <span :class="['intor-font', isExtends ? 'intor-font-large' : '']">残疾人座椅</span>
           </span>
         </div>

         <div class="seat-intro">
           <span class="intor-margin-small">
             <i class="circle-style" style="background: #DBE3F6"></i>
             <span :class="['intor-font', isExtends ? 'intor-font-large' : '']">可售({{12}})</span>
           </span>
           <span class="intor-margin-small">
             <i class="circle-style" style="background: #3b74ff"></i>
             <span :class="['intor-font', isExtends ? 'intor-font-large' : '']">柜台售卖({{12}})</span>
           </span>
           <span class="intor-margin-small">
             <i class="circle-style" style="background: #F33430; font-size: 10px; color: #ffffff; text-align: center; line-height: 12px; font-style: normal">网</i>
             <span :class="['intor-font', isExtends ? 'intor-font-large' : '']">网售({{1}})</span>
           </span>
           <span class="intor-margin-small">
             <i class="circle-style" style="background: #34B886"></i>
             <span :class="['intor-font', isExtends ? 'intor-font-large' : '']">已锁定({{0}})</span>
           </span>
           <span class="intor-margin-small">
             <i class="circle-style" style="background: #FF9E42"></i>
             <span :class="['intor-font', isExtends ? 'intor-font-large' : '']">留座({{2}})</span>
           </span>
           <span class="intor-margin-small">
             <i class="circle-style" style="background: #888888"></i>
             <span :class="['intor-font', isExtends ? 'intor-font-large' : '']">不可售({{0}})</span>
           </span>
           <span class="intor-margin-small">
             <i class="circle-style" style="background: #F33430; font-size: 10px; color: #ffffff; text-align: center; line-height: 12px; font-style: normal">未</i>
             <span :class="['intor-font', isExtends ? 'intor-font-large' : '']">未取票({{0}})</span>
           </span>
           <span class="intor-margin-small">
             <i class="icon-neiye-huaizuo iconfont" style="font-size: 12px"></i>
             <span :class="['intor-font', isExtends ? 'intor-font-large' : '']">坏座({{0}})</span>
           </span>
         </div>
        </div>
        <!-- 底部座位说明end -->

      </div>
      
      <!-- 放大后右边详情begin -->
      <div v-show="isExtends" class="seat-detail">

        <div class="small-map-film-name">
          {{"我是电影名称和日期哈哈"}}
        </div>

        <div class="small-map-screen">
          银幕
        </div>
        
        <!-- 右侧小地图区域 -->
        <div style="width: 100%; position: relative;">
          <div style="position: absolute; top: 0; left: 0; right: 0; bottom: 0; display: flex; flex-wrap: wrap;">
            <div class="part-sel" @click="partSel('leftTop')"></div>
            <div class="part-sel" @click="partSel('rightTop')"></div>
            <div class="part-sel" @click="partSel('leftBottom')"></div>
            <div class="part-sel" @click="partSel('rightBottom')"></div>
          </div>
          <div id="smallbox" style="minWidth: 100%; minHeight: 150px; position: relative; overflow: scroll; transition: all 0.2s;">
            <div :style="{width: '12px', height: '12px', top: (item.y - firstYcoord) / 2 + 'px', left: (item.x - firstXcoord) / 2 + 'px'}" class="seat-default" v-for="(item, index) in seat_data" :key="'seat' + index">
              <i :class="['iconfont', 'icon-Single-seat', 'seat-default-style', item.is_sel ? 'seat-default-style-active' : '']" style="font-size: 13px;"></i>
              <span :class="['seat-num-default', item.is_sel ? 'active-seat-num' : '']" style="font-size: 12px">{{item.col}}</span>
            </div>
          </div>
        </div>

        <div class="seat-contorl">

         <div class="small-map-control">
            <!-- 居中按钮 -->
            <span class="iconfont icon-fangda  control-common-style" style="font-size: 18px; margin-right: 1px" @click="setCenter"></span>
            <!-- 页面翻转按钮 -->
            <span class="iconfont icon-jingxiang  control-common-style" style="font-size: 18px" @click="turnReverse"></span>
         </div>
         
         <!-- 系统票类  -->
         <div class="tickets-type">
           <span style="font-weight: bold;" class="is-sel-seats-header-font">票类</span>
           <span>(已选：成人票 ￥30)</span>
         </div>
         <div class="tickets-container">
            <div style="color: #333333" :class="['tickets-common-style', ticketsitem.is_sel ? 'tickets-active' : '']" v-for="(ticketsitem, index) in ticketsArr" :key="'tickets' + index" @click="selPrice(ticketsitem.is_sel, index)">
                {{ticketsitem.name}} ￥{{ticketsitem.value}}</div>
          </div>

          <!-- 已选座位 -->
          <div class="is-sel-seats-header">
            <span class="is-sel-seats-header-font">已选7个位置</span>
          </div>
          <div class="tickets-sel-container">
            <div :class="['control-common-style-selected']" v-for="(seleteditem, index) in selectedTicketsSix[moreSel]" :key="'sel' + index">
              <span style="font-size: 12px; color: #3B74FF">{{seleteditem.seatid}}</span>
              <span style="font-size: 12px; color: #333333;" class="have-selected-ticket">{{seleteditem.value}}</span>
            </div>

            <div class="tickets-sel-tab">
              <span class="commonbtn-pre iconfont icon-arrow-left-Selected" @click="preSel"></span>
              <span class="commonbtn-next iconfont icon-arrow-right-noSelected" @click="nextSel"></span>
            </div>
            <div class="finishedBtn" @click="narrowSeats">完成</div>
          </div>
        </div>
      </div>
      <!-- 放大后右边详情end -->
    </div>
</template>

<script>
  import {getAllSeats, getCurrentSeatStatus} from 'src/request/api'  //获取全部座位，用来座位布局
  export default {
    data() {
      return {
        leftStatus: true, //大屏下显示左边详情一栏
        isExtends: false, //是否显示全屏座位图
        isReverse: false, //屏幕是否翻转
        maxWidth: 0, //放大后横向值，实际上是一个小地图横向运动的距离
        maxHeight: 0, //放大后纵向值，实际上是一个小地图纵向运动的距离
        cols: 0, //最大列数
        rows: 0, //最大行数
        seat_data: [], //所有座位的数据
        rowYs: [], //坐标去重后的数据用来渲染 排数和行数
        colXs: [], //坐标去重后的数据用来渲染 排数和行数
        basicUnit: 0, //基本单位长度，控制每个座位的位置，大小
        moreSel: 0, //已选影票的翻页控制
        currentSeatStatusArr: [], //当前场次座位的状态 每五秒获取一次
        firstYcoord:0,
        firstXcoord:0,
        ticketsArr: [   //票类集合
          {
            name: "成人票",
            value: 60,
            is_sel: true
          },
          {
            name: "学生票",
            value: 30,
            is_sel: false
          },
          {
            name: "团体票",
            value: 50,
            is_sel: false
          }
        ],
        selectedTickets: [ //已选票类的集合
          {
            seatid: "七排三号",
            value: "成人票 ￥60"
          },
          {
            seatid: "七排三号",
            value: "成人票 ￥60"
          },
          {
            seatid: "七排三号",
            value: "成人票 ￥60"
          },
          {
            seatid: "七排三号",
            value: "成人票 ￥60"
          },
          {
            seatid: "七排三号",
            value: "成人票 ￥60"
          },
          {
            seatid: "七排三号",
            value: "成人票 ￥60"
          },
          {
            seatid: "七排三号",
            value: "成人票 ￥60"
          }
        ]
      }
    },
    computed: {
      extendNum() {  //小屏幕到大屏幕的放大系数
        return this.isExtends ? 1.1 : 1
      },
      selectedTicketsSix() {  //最终用来渲染已选座位  每六个一组
        let result = []
        for(let i = 0; i < this.selectedTickets.length; i += 6) {
          result.push(this.selectedTickets.slice(i, i+6))
        }
        return result;
      }
    },
    mounted() {
        this.getAllSeats();
    },
     
    methods: {
      //获取所有座位部分状态
      getAllSeats() {
        getAllSeats().then(res => {
          if(res.code = 200) {
            this.seat_data = res.data[0].arr_seat_data.map((item) => {
              let obj = {
                col: item.col,
                group_number: item.group_number,
                priority: item.priority,
                row: item.row,
                type: item.type,
                width: item.width,
                x: item.x,
                y: item.y,
                is_sel: false,
                status: 0
              }

              return obj
            })

            this.firstXcoord = this.seat_data[0].x
            this.firstYcoord = this.seat_data[0].y
            
            this.basicUnit = this.seat_data[0].width
            //  let totalNum = this.seat_data.length
            

            let rowArr = this.seat_data.map((item) => {
              let obj = {
                row: item.row,
                y: item.y
              }
              return obj
            })

            let colArr = this.seat_data.map((item) => {
              let obj = {
                col: item.col,
                x: item.x
              }
              return obj
            })

            for(let i = 0; i < rowArr.length; i++) {
              this.rowYs.push(rowArr[i].y)
            }
            for(let i = 0; i < colArr.length; i++) {
              this.colXs.push(colArr[i].x)
            }

            this.rowYs = Array.from(new Set(this.rowYs))
            //  console.log(this.rowYs)
            this.colXs = Array.from(new Set(this.colXs))

            this.cols = Math.max.apply(null, this.colXs);
            this.rows = Math.max.apply(null, this.rowYs);
            
            this.setCenter();
          }
        })
      },
      //获取场次座位状态
      getCurrentSeatStatus() {
        getCurrentSeatStatus().then(res => {
          if(res.code == 200) {
            this.currentSeatStatusArr = res.data.arr_ticket_sales
            console.log(this.seat_data)
          }else {
            this.$message('网络错误');
          }
        })
      },
      //页面居中
      setCenter() {
        let smallbox = document.getElementById('smallbox')
        this.cols = this.cols - smallbox.scrollWidth / 4
        this.rows = this.rows - smallbox.scrollHeight / 4
        this.maxWidth = 0
        this.maxHeight = 0
        smallbox.scrollTo(smallbox.scrollWidth / 4, smallbox.scrollHeight / 4)
        this.maxWidth = this.maxWidth + smallbox.scrollWidth / 4
        this.maxHeight = this.maxHeight + smallbox.scrollHeight / 4
        this.cols = this.cols + smallbox.scrollWidth / 4
        this.rows = this.rows + smallbox.scrollHeight / 4
      },
      //页面翻转
      turnReverse() {
        this.isReverse = !this.isReverse
      },
      //小地图四个区域选择
      partSel(part) {
        let smallbox = document.getElementById('smallbox')
        this.cols = this.cols - smallbox.scrollWidth / 2
        this.rows = this.rows - smallbox.scrollHeight / 2
        this.maxWidth = 0
        this.maxHeight = 0
        if(part == 'rightBottom') {
            smallbox.scrollTo(smallbox.scrollWidth, smallbox.scrollHeight)
            this.maxWidth = this.maxWidth + smallbox.scrollWidth / 2
            this.maxHeight = this.maxHeight + smallbox.scrollHeight / 2
            this.cols = this.cols + smallbox.scrollWidth / 2
            this.rows = this.rows + smallbox.scrollHeight / 2
            // console.log('右下角', this.maxHeight, this.maxWidth)
        }else if(part == 'rightTop') {
            smallbox.scrollTo(smallbox.scrollWidth, 0)
            this.maxWidth = this.maxWidth + smallbox.scrollWidth / 2
            this.maxHeight = 0
            this.cols = this.cols + smallbox.scrollWidth / 2
            this.rows = this.rows + smallbox.scrollHeight / 2
        }else if(part == 'leftTop') {
            smallbox.scrollTo(0, 0)
            this.maxWidth = 0
            this.maxHeight = 0
            this.cols = this.cols + smallbox.scrollWidth / 2
            this.rows = this.rows + smallbox.scrollHeight / 2
        }else if(part == 'leftBottom') {
            smallbox.scrollTo(0, smallbox.scrollHeight)
            this.maxWidth = 0
            this.maxHeight = this.maxHeight + smallbox.scrollHeight / 2
            this.cols = this.cols + smallbox.scrollWidth / 2
            this.rows = this.rows + smallbox.scrollHeight / 2
            // console.log('左下角', this.maxHeight, this.maxWidth)
        }
      },
      //票类选择
      selPrice(currentStatus, index) {
         let status = !currentStatus
         this.ticketsArr.forEach((item) => {
            item.is_sel = false
         })
         this.ticketsArr[index].is_sel = status
      },
      //已选座位上一页按钮
      preSel() {
        let length = this.selectedTicketsSix.length
        if(length > 1 && this.moreSel >= 1 ) {
          this.moreSel -= 1
        }
      },
      //已选座位下一页按钮
      nextSel() {
        let length = this.selectedTicketsSix.length
        if(length > 1 && this.moreSel < length-1) {
          this.moreSel += 1
        }
      },
      //框选多个
      drawRect() {
        let that = this;
        let oBox = document.getElementById("box");
        let oDiv = document.createElement("div");
        //记录四个点的坐标
        let x1 = 0;
        let y1 = 0;
        let x2 = 0;
        let y2 = 0;
        let cx = 0;
        let cy = 0;
            //鼠标按下，获取初始点
            oBox.onmousedown = function (ev) {
               ev = window.event || ev;
                //获取按下的点
               x1 = ev.clientX - oBox.offsetLeft;
              //  console.log(x1)
               y1 = ev.clientY - oBox.offsetTop;
              //  console.log(y1)

               oBox.appendChild(oDiv);
               oBox.onmousemove = function (ev) {
                   ev = window.event || ev;
                   x2 = ev.clientX - oBox.offsetLeft;
                   y2 = ev.clientY - oBox.offsetTop;
                   cx = x2 - x1;
                   cy = y2 - y1;
                   //设置div的样式  四个方向设置不同的矩形位置
                   if(cx>0 && cy>0) {
                      oDiv.style.left = x1 +"px"; 
                      oDiv.style.top = y1 +"px";
                   }else if(cx<0 && cy>0){
                      oDiv.style.left = x2 +"px"; 
                      oDiv.style.top = y1 +"px";
                   }else if(cx>0 && cy<0){
                      oDiv.style.left = x1 +"px"; 
                      oDiv.style.top = y2 +"px";
                      
                   }else if(cx<0 && cy<0){
                      oDiv.style.left = x2 +"px"; 
                      oDiv.style.top = y2 +"px";
                   }
                   oDiv.style.position = "absolute";
                   oDiv.style.width = Math.abs(cx)+"px";
                   oDiv.style.height =Math.abs(cy)+"px";
                   oDiv.style.borderColor = "#dedede";
                   oDiv.style.borderWidth = "1px";
                   oDiv.style.borderStyle = "dashed";
                   oDiv.style.opacity = 1;
               }
               return false;  //解除在划动过程中鼠标样式改变的BUG
           }
           //在鼠标抬起后终止onmousemove事件
           oBox.onmouseup = function () {
               let arr = []
               //框选区域的整数化 正向华 （左上到右下的方向）
               let calcx1, calcy1, calcx2, calcy2;
               if(cx>0 && cy>0) {
                  calcx1 = x1 + that.maxWidth
                  calcy1 = y1 + that.maxHeight
                  calcx2 = x2 + that.maxWidth
                  calcy2 = y2 + that.maxHeight
                }else if(cx<0 && cy>0){
                  calcx1 = x1 - Math.abs(cx) + that.maxWidth
                  calcy1 = y1 + that.maxHeight
                  calcx2 = x2 + Math.abs(cx) + that.maxWidth
                  calcy2 = y2 + that.maxHeight
                }else if(cx>0 && cy<0){
                  calcx1 = x1 + that.maxWidth
                  calcy1 = y1 - Math.abs(cy) + that.maxHeight
                  calcx2 = x2 + that.maxWidth
                  calcy2 = y2 + Math.abs(cy) + that.maxHeight
                  
                }else if(cx<0 && cy<0){
                  calcx1 = x1 - Math.abs(cx) + that.maxWidth
                  calcy1 = y1 - Math.abs(cy) + that.maxHeight
                  calcx2 = x2 + Math.abs(cx) + that.maxWidth
                  calcy2 = y2 + Math.abs(cy) + that.maxHeight
                }
               for(let i = 0; i < that.seat_data.length; i++) {
                 let item = that.seat_data[i]
                 let x = (item.x - that.firstXcoord) * 1.27 * that.extendNum + 28
                 let y = (item.y - that.firstYcoord) * 1.27 * that.extendNum + 12
                 if((x<calcx2 && y<calcy2) && (calcx1<=x && calcy1<=y)) {
                  //  that.$set(item, 'is_sel', true)
                  //  console.log(item.group_number)
                   arr.push(item)
                 }
               }
              //  console.log(arr)
               for(let k = 0; k < arr.length; k++) {
                 that.selMultity(arr[k].group_number)
               }
               
               oBox.onmousemove = null;
               oDiv.style.opacity = 0;
               if(oDiv) {
                 oBox.removeChild(oDiv);
               }
              //  console.log(oBox)
           }
      },
      //单选
      selSingleSeat(status, groupNum) {
        let currentstatus = !status
        for(let i = 0; i < this.seat_data.length; i++) {
          let item = this.seat_data[i]
          if(item.group_number == groupNum) {
            this.$set(this.seat_data[i], 'is_sel', currentstatus)
          }
        }
      },
      //多选
      selMultity(groupNum) {
        for(let i = 0; i < this.seat_data.length; i++) {
          let item = this.seat_data[i]
          if(item.group_number == groupNum) {
            this.$set(this.seat_data[i], 'is_sel', true)
          }
        }
      },
      //点击放大
      extendSeats() {
        this.leftStatus = false
        this.isExtends = true
      },
      //缩小
      narrowSeats() {
        this.leftStatus = true
        this.isExtends = false
        this.setCenter()
      },
    }
  }
</script>

<style lang="scss">
  .seat-container {
    width: 100%;
    height: 100%;
    // background: #cccccc;
    display: flex;
    justify-content: space-between;
    box-sizing: border-box;
    overflow: hidden;
  }

  .left {
    width: 312px;
    height: 100%;
    border-right: 1px solid #D9E4FF;
    box-sizing: border-box;
  }

  .left-header {
    width: calc(100% - 24px);
    height: 48px;
    line-height: 48px;
    background: #3559AF;
    font-size: 12px;
    padding: 0 12px;
    color: #ffffff;
    display: flex;
    justify-content: space-between;
  }

  .menu-icon {
    font-size: 12px;
    color: #ffffff;
  }

  .film-scheduling {
    width: 100%;
    height: calc(100% - 48px - 140px);
    position: relative;
  }

  .better-scroll-container {
    width: 100%;
    height: calc(100% - 40px);
    overflow: hidden;
  }

  .tab-header {
    width: calc(100% - 48px);
    height: 40px;
    background: #D9E4FF;
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0 24px;
  }

  .commontab-style {
    display: inline-block;
    width: 72px;
    height: 26px;
    font-size: 12px;
    color: #333333;
    text-align: center;
    line-height: 26px;
    cursor: pointer;
  }

  .active-tab-style {
    background: #3B74FF;
    border-radius: 13px;
    color: #ffffff;
  }

  .seat-detail {
    width: 22%;
    height: 100%;
    background: #ffffff;
    box-sizing: border-box;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: flex-start;
    position: relative;
  }

  .right {
    flex: 1;
    height: 100%;
    background: #ffffff;
    padding: 40px;
    box-sizing: border-box;
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .header {
    font-size: 14px;
    color: #333333;
    text-align: center;
    margin-bottom: 2%;
    position: relative;
    width: 100%;
  }

  .extendFontHeader {
    font-size: 18px !important;
  }

  .screen {
    height: 24px;
    background: #dbe3f6;
    text-align: center;
    line-height: 24px;
    margin-bottom: 2%;
    border-bottom-right-radius: 30px;
    border-bottom-left-radius: 30px;
  }

  .seats {
    min-height: 500px;
    overflow: hidden;
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    position: relative;
    cursor:crosshair;
  }

  .seats-center {
    overflow: hidden;
    display: flex;
    justify-content: center;
    align-items: start;
  }

  .seats-container {
    box-sizing: border-box;
    position: relative;
    transition: all 0.3s;
  }

  // 座位默认样式
  .seat-default {
    position: absolute;
    display: flex;
    justify-content: center;
    align-items: center;
  }
  .seat-default-style {
    color: #C4D5FF;;
  }
  .seat-default-style-active {
    color: rgb(98, 136, 255) !important;
  }
  .seat-num-default {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: #666666;
    user-select: none;
  }
  .active-seat-num {
    color: #ffffff;
    font-weight: bold;
  }
  .row-default  {
    width: 18px;
    background: #f2f2f2;
    border-radius: 9px;
    position: relative;
    user-select: none;
  }
  .row-num-style {
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    user-select: none;
  }
  .seatLargeBox {
    width: 32px !important;
    height: 28px !important;
  }
  .common-seat-font {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    font-size: 24px;
    color: #DBE3F6;
    user-select: none;
    cursor: pointer;
  }
  .active-seat {
    color: rgb(98, 136, 255) !important;
  }
  .common-seat-number {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    font-size: 12px;
    color: #666666;
    z-index: 100;
    user-select: none;
    cursor: pointer;
  }
  .extendFontNum {
    font-size: 14px !important;
  }
  .outside-common {
    width: 16px;
    background: #f2f2f2;
    border-radius: 8px;
  }
  .seat-intro {
    margin: 12px 0;
    display: flex;
    justify-content: center;
  }
  .intor-margin {
    margin: 0 18px;
  }
  .intor-font {
    color: #333333;
    font-size: 12px;
  }
  .intor-img {
    font-size: 14px;
    color: #DBE3F6;
  }
  .intor-img-large {
    font-size: 18px;
    color: #DBE3F6;
  }
  .intor-margin-small {
    margin: 0 6px;
    display: flex;
    align-items: center;
  }
  .circle-style {
    display: inline-block;
    width: 12px;
    height: 12px;
    border-radius: 50%;
    margin-right: 4px;
  }

  //放大按钮
  .extend-btn {
    position: absolute;
    top: 10px;
    right: 10px;
    color:  #333333;
    font-weight: 200;
    font-size: 18px;
    cursor: pointer;
  }

  //放大后的字体大小
  .extendFont {
    font-size: 28px !important;
  }
  .intor-font-large {
    font-size: 14px !important;
  }

  //左侧向上向下箭头
  .arrow-common {
    position: absolute;
    width: 70px;
    height: 20px;
    background: #436AC8;
    opacity: 0.3;
    z-index: 5000;
  }

  .arrow-common:nth-child(1) {
    top: 40px;
    left: 20px;
  }

  .arrow-common:nth-child(2) {
    bottom: 0;
    left: 20px;
  }

  .small-map-film-name {
    font-size: 12px;
    color: #333333;
    text-align: center;
    transform: scale(0.9);
  }

  .small-map-screen {
    width: 100%;
    height: 14px;
    font-size: 12px;
    color: #333333;
    text-align: center;
    background: #f2f2f2;
    transform: scaleY(0.8);
    margin: 12px 0;
  }

  .seat-contorl {
    width: 100%;
    background: #f2f2f2;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: center;
    font-size: 12px;
  }

  .control-common-style {
    display: inline-block;
    width: 45%;
    height: 32px;
    line-height: 32px;
    border: 1px solid #A4BEFC;
    color: #3b74ff;
    text-align: center;
    margin-top: 12px 0;
    background: #ffffff;
    font-size: 12px;
    margin-right: 1px;
    margin-top: 1px;
  }

  .tickets-common-style {
    display: inline-block;
    width: 45%;
    height: 32px;
    line-height: 32px;
    border: 1px solid #A4BEFC;
    color: #3b74ff;
    text-align: center;
    margin-top: 12px 0;
    background: #ffffff;
    font-size: 12px;
    margin-right: 1px;
    margin-top: 1px;
  } 
  .tickets-common-style:nth-of-type(odd) {
    margin-left: 10px;
  }

  .control-common-style-selected:nth-of-type(odd) {
    margin-left: 10px;
  }

  .control-common-style-selected {
    display: flex;
    width: 45%;
    height: 46px;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    font-size: 12px;
    margin-right: 1px;
    margin-bottom: 12px;
  }

  .have-selected-ticket {
    display: inline-block;
    width: 100%;
    height: 32px;
    line-height: 32px;
    border: 1px solid #A4BEFC;
    color: #3b74ff;
    text-align: center;
    margin-top: 12px 0;
    background: #ffffff;
    font-size: 12px;
    margin-right: 1px;
    margin-top: 1px;
  }

  .tickets-active {
    position: relative;
    overflow: hidden;
  }

  .tickets-active::after {
    display: block;
    content: "已选";
    font-size: 12px;
    background: #3B74FF;
    width: 66px;
    height: 62px;
    color: #ffffff;
    line-height: 106px;
    position: absolute;
    top: -34px;
    right: -38px;
    transform: rotate(45deg) scale(0.7);
  }

  .commonbtn-pre, .commonbtn-next {
    width: 40px;
    height: 26px;
    display: flex;
    align-items: center;
    justify-content: center;
    border: 1px solid #A4BEFC;
    font-size: 12px;
    margin: 0 10px;
  }

.part-sel {
   flex: 0 0 50%;
   height: 50%; 
   box-sizing: border-box; 
   border: 1px dashed #DBE3F6;
   z-index: 500;
}
.part-sel:hover {
  background: rgba(152, 180, 245, 0.527);
  cursor: pointer;
  border: 1px dashed rgb(41, 104, 252);
}

.reverse-style {
  transform: rotate(-180deg);
}
.tickets-container {
  box-sizing: border-box;
  display: flex; 
  justify-content: flex-start; 
  margin: 12px 0; 
  width: 100%; 
  flex-wrap: wrap;
}
.tickets-sel-container {
  display: flex; 
  justify-content: flex-start; 
  margin: 12px 0; 
  width: 100%; 
  flex-wrap: wrap;
}
.tickets-sel-tab {
  display: flex; 
  justify-content: center; 
  width: 100%;
  flex-wrap: wrap;
  margin-bottom: 10px;
}
.finishedBtn {
  width: 100%;
  height: 32px;
  color: #ffffff; 
  background: #3b74ff; 
  margin: 12px auto; 
  line-height: 32px; 
  text-align: center; 
  cursor: pointer;
}
.is-sel-seats-header {
   width:100%; 
   height: 48px;
   line-height: 48px; 
   background: #DBE3F6;
}
.small-map-control {
  width: 100%; 
  display: flex; 
  justify-content: center; 
  margin-top: 12px;
}
.tickets-type {
  width:100%; 
  height: 48px; 
  line-height: 48px; 
  background: #DBE3F6;
  margin-top: 12px;
}
.is-sel-seats-header-font {
  margin-left: 12px;
}
.icon-sanrenzuozhong {
  transform: scaleX(1.4);
}
</style>